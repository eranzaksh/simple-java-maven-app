# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Login to Docker Hub
        id: docker-hub
        env:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}
        run: |
          docker login -u $username -p $password || exit 1

      - name: Build the Docker image
        id: build-docker-image
        run: |
          ls -la 
          docker build . -f Dockerfile -t eranzaksh/infinity:actions

      - name: Push the Docker image
        id: push-docker-image
        run: docker push eranzaksh/infinity:actions
        
      - name: Get version
        run: |
          current_version=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          echo "Current version: $current_version"
          version=$(echo ${current_version} | awk -F'.' '{print $1"."$2"."$3+1}')
          echo "New version: $version"
          mvn versions:set -DnewVersion=$version
      
      - name: Commit and push version update
        run: |
          git config --local user.email "actions@github.com"
          git config --local user.name "GitHub Actions"
          git add pom.xml
          git commit -m "Increment version to $version"
          git push origin master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Add SSH key
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Deploy to server
        env:
          REMOTE_USER: ec2-user
          REMOTE_HOST: 13.60.197.253
        run: |
          ssh -o StrictHostKeyChecking=no $REMOTE_USER@$REMOTE_HOST << 'EOF'
            docker run -d --rm eranzaksh/infinity:actions
            exit
          EOF



    # Optional: Uploads the full dependency graph to GitHub to improve the quality of Dependabot alerts this repository can receive
    # - name: Update dependency graph
    #   uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6
